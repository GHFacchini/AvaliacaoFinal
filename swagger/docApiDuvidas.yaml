openapi: 3.0.1
info:
  title: Forum do programa de bolsas.
  description: API para postagem de dúvidas e respectivas soluções, dentro do programa de bolsas da empresa Compasso/UOL.
  version: 1.0.0
  termsOfService: https://compassouol.com
  contact:
    name: Suporte a desenvolvedores
    email: compasso@hotmail.com 
  license:
    name: "Licença: GPLv3"
    url: https://www.gnu.org/licenses/gpl-3.0.html
servers:
- url: http://localhost:8080/
  description: API de teste
paths:
  /auth:
    post:
      tags:
      - autenticacao
      summary: Retorna o token de login para o usuario
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginDTO"
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenDTO"
        400:
          description: Email ou senha incorretos
  
  /topicos:
    get:
      tags: 
        - topicos
      summary: Recupera uma lista de topicos.
      description: Pode recuperar todos os topicos cadastradas
      parameters:
      - name: titulo
        in: query
        schema:
          type: string
        required: false
      - name: curso
        in: query
        schema:
          type: string
        required: false
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TopicosDTO"
  
  /respostas:
    get:
      tags: 
        - respostas
      summary: Recupera uma lista de respostas.
      description: Pode recuperar todos os respostas cadastradas
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RespostasDTO"
  
  /arquivo/resposta/{id}:
    post:
      tags:
        - arquivos
      summary: Realiza upload de um arquivo
      description: Realiza o upload de um arquivo e o relaciona com uma determinada resposta
      parameters:
      - name: id
        in: path
        schema:
          type: integer
        required: true
      responses:
        200:
          description: Arquivo salvo com sucesso!
        400:
          description: Problema ao tentar salvar arquivo...
        404:
          description: Resposta não encontrada
          content:
            application/json:
              example: "Not Found"

  /arquivo/{nome}:
    get:
      tags:
        - arquivos
      summary: Realiza o download de um determinado arquivo
      parameters:
      - name: nome
        in: path
        schema:
          type: string
        required: true
      responses:
        200:
          description: Sucesso
        400:
          description: Problema ao tentar fazer o download do arquivo...
  
  /turmas:
    get:
      tags: 
        - turmas
      summary: Recupera uma lista de turmas.
      description: Pode recuperar todas as turmas cadastradas
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TurmasDTO"
    post:
      tags:
        - turmas
      summary: Cadastra uma nova turma
      requestBody:
        content:
          application/json:
              schema:
                $ref: "#/components/schemas/TurmaFormDTO"
      responses:
        201:
          description: Cadastrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TurmaDTO"

  /turmas/{id}:
    get:
      tags:
        - turmas
      summary: Recupera uma turma pelo Id
      parameters:
      - name: id
        in: path
        schema:
          type: integer
        required: true
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TurmaDTO"
        404:
          description: Turma não encontrada
          content:
            application/json:
              example: "Not Found"
    put:
      tags:
        - turmas
      summary: Atualiza a turma de determinado ID
      parameters:
      - name: id
        in: path
        schema:
          type: integer
        required: true
      requestBody:
        content:
          application/json:
              schema:
                $ref: "#/components/schemas/TurmaFormDTO"
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TurmaDTO"
        404:
          description: Turma não encontrada
    delete:
      tags:
        - turmas
      summary: Remove a turma de determinado ID
      parameters:
      - name: id
        in: path
        schema:
          type: integer
        required: true
      responses:
        200:
          description: Sucesso
        404:
          description: Turma não encontrada

  /turmas/{id}/sprints:
    get:
      tags:
        - turmas
      summary: Recupera todas sprints de uma determinada turma
      parameters:
      - name: id
        in: path
        schema:
          type: integer
        required: true
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TurmasDTO"
        404:
          description: Turma não encontrada
    post:
      tags:
        - turmas
      summary: Adiciona uma sprint a uma turma
      parameters:
      - name: id
        in: path
        schema:
          type: integer
        required: true
      requestBody:
        content:
          application/json:
              schema:
                $ref: "#/components/schemas/TurmaAddSprintFormDTO"
      responses:
        201:
          description: Cadastrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SprintDTO"
        404:
          description: Turma não encontrada
  
  /turmas/{id1}/sprints/{id2}:
    delete:
      tags:
        - turmas
      summary: Remove uma determinada sprint de uma determinada turma
      parameters:
      - name: id1
        in: path
        schema:
          type: integer
        required: true
      - name: id2
        in: path
        schema:
          type: integer
        required: true
      responses:
        200:
          description: Sucesso
        404:
          description: Turma ou sprint não encontrada
  
  /turmas/{id1}/usuarios/{id2}:
    post:
      tags:
        - turmas
      summary: Adiciona um usuario a uma determinada turma
      parameters:
      - name: id1
        in: path
        schema:
          type: integer
        required: true
      - name: id2
        in: path
        schema:
          type: integer
        required: true
      responses:
        201:
          description: Cadastrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TurmaDTO"
        404:
          description: Turma ou usuario não encontrados
    delete:
      tags:
        - turmas
      summary: Remove um determinado usuario de uma determinada turma
      parameters:
      - name: id1
        in: path
        schema:
          type: integer
        required: true
      - name: id2
        in: path
        schema:
          type: integer
        required: true
      responses:
        200:
          description: Sucesso
        404:
          description: Turma ou usuario não encontrada

  /turmas/{id}/usuarios:
    get:
      tags:
        - turmas
      summary: Recupera todos os usuarios de uma determinada turma
      parameters:
      - name: id
        in: path
        schema:
          type: integer
        required: true
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsuariosDTO"
        404:
          description: Turma não encontrada

  /cursos:
    get:
      tags: 
        - cursos
      summary: Recupera uma lista de cursos.
      description: Pode recuperar todos os cursos cadastradas
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CursosDTO"
    post:
      tags:
        - cursos
      summary: Cadastra um novo curso
      requestBody:
        content:
          application/json:
              schema:
                $ref: "#/components/schemas/CursoFormDTO"
      responses:
        201:
          description: Cadastrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CursoDTO"
  
  /cursos/{id}:
    get:
      tags:
        - cursos
      summary: Recupera um curso de determinado ID
      parameters:
      - name: id
        in: path
        schema:
          type: integer
        required: true
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CursoDTO"
        404:
          description: Curso não encontrado
    put:
      tags:
        - cursos
      summary: Atualiza um curso de determinado ID
      parameters:
      - name: id
        in: path
        schema:
          type: integer
        required: true
      requestBody:
        content:
          application/json:
              schema:
                $ref: "#/components/schemas/CursoFormDTO"
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CursoDTO"
        404:
          description: Curso não encontrado
    delete:
      tags:
        - cursos
      summary: Remove o curso de determinado ID
      parameters:
      - name: id
        in: path
        schema:
          type: integer
        required: true
      responses:
        200:
          description: Sucesso
        404:
          description: Curso não encontrado
  
  /cursos/{id}/topicos:
    post:
      tags:
        - cursos
      summary: Adiciona um topico a um determinado curso
      parameters:
      - name: id
        in: path
        schema:
          type: integer
        required: true
      requestBody:
        content:
          application/json:
              schema:
                $ref: "#/components/schemas/TopicoFormDTO"
      responses:
        201:
          description: Cadastrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TopicoDTO"
        404:
          description: Curso ou topico não encontrados
    get:
      tags:
        - cursos
      summary: Recupera todos tópicos de determinado curso
      description: Pode recuperar todos os tópicos de determinado curso pelo ID
      parameters:
      - name: id
        in: path
        schema:
          type: integer
        required: true
      - name: titulo
        in: query
        schema:
          type: string
        required: false
      - name: curso
        in: query
        schema:
          type: string
        required: false
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CursosDTO"
  
  /cursos/{id1}/topicos/{id2}:
    get:
      tags:
        - cursos
      summary: Retorna um topico de determinado curso
      parameters:
      - name: id1
        in: path
        schema:
          type: integer
        required: true
      - name: id2
        in: path
        schema:
          type: integer
        required: true
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TopicoDTO"
        404:
          description: Curso ou topico não encontrados
    put:
      tags:
        - cursos
      summary: Atualiza um topico de determinado curso
      parameters:
      - name: id1
        in: path
        schema:
          type: integer
        required: true
      - name: id2
        in: path
        schema:
          type: integer
        required: true
      requestBody:
        content:
          application/json:
              schema:
                $ref: "#/components/schemas/TopicoFormDTO"
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TopicoDTO"
        404:
          description: Curso ou topico não encontrados
    delete:
      tags:
        - cursos
      summary: Remove um determinado topico de um determinado curso
      parameters:
      - name: id1
        in: path
        schema:
          type: integer
        required: true
      - name: id2
        in: path
        schema:
          type: integer
        required: true
      responses:
        200:
          description: Sucesso
        404:
          description: Curso ou topico não encontrados
  
  /cursos/{id1}/topicos/{id2}/fechar:
    patch:
      tags:
        - cursos
      summary: Fecha um determinado tópico de determinado curso
      parameters:
      - name: id1
        in: path
        schema:
          type: integer
        required: true
      - name: id2
        in: path
        schema:
          type: integer
        required: true
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TopicoDTO"
        404:
          description: Curso ou topico não encontrados
  
  /cursos/{id1}/topicos/{id2}/respostas:
    post:
      tags:
        - cursos
      summary: Adiciona uma resposta a um topico de um determinado curso
      parameters:
      - name: id1
        in: path
        schema:
          type: integer
        required: true
      - name: id2
        in: path
        schema:
          type: integer
        required: true
      requestBody:
        content:
          application/json:
              schema:
                $ref: "#/components/schemas/RespostaFormDTO"
      responses:
        201:
          description: Cadastrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RespostaDTO"
        404:
          description: Curso ou topico não encontrados
  
  /cursos/{id1}/topicos/{id2}/respostas/{id3}:
    get:
      tags:
        - cursos
      summary: Retorna uma resposta de um topico de um determinado curso
      parameters:
      - name: id1
        in: path
        schema:
          type: integer
        required: true
      - name: id2
        in: path
        schema:
          type: integer
        required: true
      - name: id3
        in: path
        schema:
          type: integer
        required: true
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RespostaDTO"
        404:
          description: Curso, topico ou resposta não encontrados
    put:
      tags:
        - cursos
      summary: Adiciona uma resposta a um topico de um determinado curso
      parameters:
      - name: id1
        in: path
        schema:
          type: integer
        required: true
      - name: id2
        in: path
        schema:
          type: integer
        required: true
      - name: id3
        in: path
        schema:
          type: integer
        required: true
      requestBody:
        content:
          application/json:
              schema:
                $ref: "#/components/schemas/RespostaFormDTO"
      responses:
        201:
          description: Cadastrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RespostaDTO"
        404:
          description: Curso, topico ou resposta não encontrados
    patch:
      tags:
        - cursos
      summary: Torna uma resposta como solução
      parameters:
      - name: id1
        in: path
        schema:
          type: integer
        required: true
      - name: id2
        in: path
        schema:
          type: integer
        required: true
      - name: id3
        in: path
        schema:
          type: integer
        required: true
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RespostaDTO"
        404:
          description: Curso, topico ou resposta não encontrados
    delete:
      tags:
        - cursos
      summary: Remove uma determinada resposta
      parameters:
      - name: id1
        in: path
        schema:
          type: integer
        required: true
      - name: id2
        in: path
        schema:
          type: integer
        required: true
      - name: id3
        in: path
        schema:
          type: integer
        required: true
      responses:
        200:
          description: Sucesso
        404:
          description: Curso, topico ou resposta não encontrados
  
  /sprints/:
    get:
      tags: 
        - sprints
      summary: Recupera uma lista de sprints.
      description: Pode recuperar todos as sprints cadastradas
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SprintsDTO"
    post:
      tags:
        - sprints
      summary: Cadastra uma nova sprint
      requestBody:
        content:
          application/json:
              schema:
                $ref: "#/components/schemas/SprintFormDTO"
      responses:
        201:
          description: Cadastrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SprintDTO"
  
  /sprints/{id}:
    get:
      tags:
        - sprints
      summary: Recupera uma sprint de determinado ID
      parameters:
      - name: id
        in: path
        schema:
          type: integer
        required: true
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SprintDTO"
        404:
          description: Sprint não encontrado
    put:
      tags:
        - sprints
      summary: Atualiza um sprint de determinado ID
      parameters:
      - name: id
        in: path
        schema:
          type: integer
        required: true
      requestBody:
        content:
          application/json:
              schema:
                $ref: "#/components/schemas/SprintFormDTO"
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SprintDTO"
        404:
          description: Sprint não encontrado
    delete:
      tags:
        - sprints
      summary: Remove o sprint de determinado ID
      parameters:
      - name: id
        in: path
        schema:
          type: integer
        required: true
      responses:
        200:
          description: Sucesso
        404:
          description: Sprint não encontrado
  
  /sprints/{id}/cursos:
    get:
      tags:
        - sprints
      summary: Recupera todos cursos de determinada sprint
      description: Pode recuperar todos os cursos de determinado sprint pelo ID
      parameters:
      - name: id
        in: path
        schema:
          type: integer
        required: true
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CursosDTO"
  
  /sprints/{id1}/cursos/{id2}:
    post:
      tags:
        - sprints
      summary: Adiciona um curso a uma determinada sprint
      parameters:
      - name: id1
        in: path
        schema:
          type: integer
        required: true
      - name: id2
        in: path
        schema:
          type: integer
        required: true
      responses:
        201:
          description: Cadastrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SprintDTO"
        404:
          description: Sprint ou curso não encontrados
    delete:
      tags:
        - sprints
      summary: Remove um determinado curso de uma determinada sprint
      parameters:
      - name: id1
        in: path
        schema:
          type: integer
        required: true
      - name: id2
        in: path
        schema:
          type: integer
        required: true
      responses:
        200:
          description: Sucesso
        404:
          description: Sprint ou curso não encontrados
  
  /usuarios:
    get:
      tags: 
        - usuarios
      summary: Recupera uma lista de usuarios.
      description: Pode recuperar todos os usuarios cadastradas
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsuariosDTO"
    post:
      tags:
        - usuarios
      summary: Cadastra um novo usuario
      requestBody:
        content:
          application/json:
              schema:
                $ref: "#/components/schemas/UsuarioFormDTO"
      responses:
        201:
          description: Cadastrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsuarioDTO"

  /usuarios/{id}:
    get:
      tags:
        - usuarios
      summary: Recupera um usuario de determinado ID
      parameters:
      - name: id
        in: path
        schema:
          type: integer
        required: true
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsuarioDTO"
        404:
          description: Usuario não encontrado
    put:
      tags:
        - usuarios
      summary: Atualiza um usuario de determinado ID
      parameters:
      - name: id
        in: path
        schema:
          type: integer
        required: true
      requestBody:
        content:
          application/json:
              schema:
                $ref: "#/components/schemas/UsuarioFormDTO"
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsuarioDTO"
        404:
          description: Usuario não encontrado
    delete:
      tags:
        - usuarios
      summary: Remove o usuario de determinado ID
      parameters:
      - name: id
        in: path
        schema:
          type: integer
        required: true
      responses:
        200:
          description: Sucesso
        404:
          description: Usuario não encontrado

  /perfis:
    get:
      tags: 
        - perfis
      summary: Recupera uma lista de perfis
      description: Pode recuperar todos os perfis cadastradas
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PerfisDTO"
    post:
      tags:
        - perfis
      summary: Cadastra um novo perfil
      requestBody:
        content:
          application/json:
              schema:
                $ref: "#/components/schemas/PerfilFormDTO"
      responses:
        201:
          description: Cadastrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PerfilDTO"

  /perfis/{id}:
    get:
      tags:
        - perfis
      summary: Recupera um perfil de determinado ID
      parameters:
      - name: id
        in: path
        schema:
          type: integer
        required: true
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PerfilDTO"
        404:
          description: Perfil não encontrado
    put:
      tags:
        - perfis
      summary: Atualiza um perfil de determinado ID
      parameters:
      - name: id
        in: path
        schema:
          type: integer
        required: true
      requestBody:
        content:
          application/json:
              schema:
                $ref: "#/components/schemas/PerfilFormDTO"
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PerfilDTO"
        404:
          description: Perfil não encontrado
    delete:
      tags:
        - perfis
      summary: Remove o perfil de determinado ID
      parameters:
      - name: id
        in: path
        schema:
          type: integer
        required: true
      responses:
        200:
          description: Sucesso
        404:
          description: Perfil não encontrado

tags:
  - name: autenticacao
    description: Realiza operações de autenticacao na API
  - name: topicos
    description: Busca todos os cadastros da entidade Topico
  - name: respostas
    description: Busca todos os cadastros da entidade Resposta
  - name: arquivos
    description: Realiza operações com arquivos
  - name: turmas
    description: Realiza operações na entidade Turma
  - name: cursos
    description: Realiza operações nas entidades Cursos, Topicos e Respostas
  - name: sprints
    description: Realiza operações na entidade Sprint
  - name: usuarios
    description: Realiza operações na entidade Usuario
  - name: perfis
    description: Realiza operações na entidade Perfil
security: 
- auth: []
components:
  securitySchemes:
    auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    LoginDTO:
      type: object
      properties:
        email:
          type: string
          example: moderador@compasso.com
        senha:
          type: string
          example: compasso2021
    TokenDTO:
      type: object
      properties:
        token:
          type: string
          example: eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJBcGkgZGUgQ
        tipo:
          type: string
          example: Bearer
    TurmaDTO:
      type: object
      properties:
        id:
          type: integer
          example: 1
        nome:
          type: string 
          example: Spring Boot
        usuariosIds:
          type: array
          items:
            type: integer
            example: 1
        sprints:
          type: array
          items:
            type: string
            example: "Id: 3 Título: Primeira Sprint" 
    TurmasDTO:
      type: array
      items:
        $ref: "#/components/schemas/TurmaDTO"
    CursoDTO:
      type: object
      properties:
        id:
          type: integer
          example: 2
        nome:
          type: string
          example : Spring Boot
        categoria:
          type: string
          example: React
        topicosIds:
          type: array
          items:
            type: string
            example: "Id: 3 Título: Primeira Sprint Status: FECHADO" 
    CursosDTO:
      type: array
      items:
        $ref: "#/components/schemas/CursoDTO"
    CursoFormDTO:
      type: object
      properties:
        nome:
          type: string
          example: Spring Boot
        categoria:
          type: string
          example: React
    RespostaDTO:
      type: object
      properties:
        id:
          type: integer
          example: 1
        autor:
          type: string
          example: João da Silva
        topico:
          type: string
          example: Duvida
        mensagem:
          type: string
          example: Preciso de esclarecimentos sobre o conteúdo da aula um
        dataCriação:
          type: string
          format: date=time
          example: 2021-12-02 
        solucao:
          type: boolean
          example: true
        arquivo:
          type: string
          example: apostila.pdf
    RespostasDTO:
      type: array
      items:
        $ref: "#/components/schemas/RespostaDTO"
    RespostaFormDTO:
      type: object
      properties:
        IdAutor:
          type: integer
          example: 2
        idTopico:
          type: integer
          example: 2
        mensagem:
          type: string
          example: Resposta do tópico criado
    SprintDTO:
      type: object
      properties:
        id: 
          type: integer
          example: 3
        titulo:
          type: string
          example: Primeira Sprint
    SprintsDTO:
      type: array
      items:
        $ref: "#/components/schemas/SprintDTO"
    SprintFormDTO:
      type: object
      properties:
        titulo:
          type: string
          example: Primeira Sprint
    TopicoDTO:
      type: object
      properties:
        id: 
          type: integer
          example: 5
        titulo:
          type: string
          example: Duvida sobre a aula numero dois
        descricao:
          type: string
          example: Detalhamento da duvida em questâo
        dataCriacao:
          type: string
          format: date-time
          example: 2021-10-16 
        autor:
          type: string
          example: Joao da Silva
        curso:
          type: string
          example: Spring Boot
        status:
          type: string
          example: FECHADO
    TopicosDTO:
      type: array
      items:
        $ref: "#/components/schemas/TopicoDTO"
    TopicoFormDTO:
      type: object
      properties:
        titulo:
          type: string
          example: Duvida sobre a aula numero dois
        descricao:
          type: string
          example: Detalhamento da duvida em questão
        cursoId:
          type: integer
          example: 6
        autorId:
          type: integer
          example: 4
    TurmaAddSprintFormDTO:
      type: array
      items:
        type: object
        properties:
          sprintsIds:
            type: integer
            example: 4
    TurmaAddUsuarioFormDTO:
      type: object
      properties:
        turmaId:
          type: integer
          example: 4
        usuarioId:
          type: integer
          example: 7
    TurmaFormDTO:
      type: object
      properties:
        nome:
          type: string
          example: Nome da turma
    UsuarioDTO:
      type: object
      properties:
        id:
          type: integer
          example: 1
        nome:
          type: string
          example: João da Silva
        email:
          type: string
          example: rosrigo@gmail.com
        perfilUsuario:
          type: string
          example: usuario
    UsuariosDTO:
      type: array
      items:
        $ref: "#/components/schemas/UsuarioDTO"
    UsuarioFormDTO:
      type: object
      properties:
        nome:
          type: string
          example: Joao da Silva
        email:
          type: string
          example: joao@gmail.com
        senha:
          type: string
          example: radasasa456
        perfilId:
          type: integer
          example: 4
    PerfilDTO:
      type: object
      properties:
        id:
          type: integer
          example: 1
        nome:
          type: string
          example: Role_Moderador
    PerfisDTO:
      type: array
      items:
        $ref: "#/components/schemas/PerfilDTO"
    PerfilFormDTO:
      type: object
      properties:
        nome:
          type: string
          example: Role_Moderador